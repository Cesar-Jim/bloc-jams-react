{"version":3,"sources":["components/Landing.js","data/albums.js","components/Library.js","components/PlayerBar.js","components/Album.js","App.js","serviceWorker.js","index.js"],"names":["Landing","react_default","a","createElement","className","height","width","src","alt","albums","title","artist","releaseInfo","albumCover","slug","songs","duration","audioSrc","Library","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","albumData","map","album","index","Link","to","concat","key","length","Component","PlayerBar","id","onClick","handlePrevClick","handleSongClick","isPlaying","handleNextClick","formatTime","currentTime","type","value","max","min","step","onChange","handleTimeChange","volume","handleVolumeChange","Album","find","match","params","currentSong","isHovering","init","audioElement","document","play","setState","pause","_this2","eventListeners","timeupdate","e","durationchange","addEventListener","removeEventListener","song","isSameSong","setSong","_this3","currentIndex","findIndex","newIndex","Math","newSong","_this4","newTime","target","timeInSec","isNaN","minutes","trunc","seconds","floor","newVolume","_this5","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","handleIconsDisplay","components_PlayerBar","App","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96d0741f.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../stylesheets/Landing.css';\r\n\r\n\r\nconst Landing = () => (\r\n   <section className=\"landing\">\r\n      <div className=\"hero-container\">\r\n         <img className=\"hero-image\" height=\"430px\" width=\"800px\" src=\"/assets/images/landing_images/boy_singing.jpg\" alt=\"Boy singing\" />\r\n         <h1 className=\"hero-title\">Turn the music up!</h1>\r\n      </div>\r\n      \r\n\r\n      <section className=\"selling-points\">\r\n         <div className=\"point-1-container\">\r\n            <h2 className=\"point-title-1\">Choose your music...</h2>\r\n            <p className=\"point-description-1\">...The world is full of music; <br /> WHY should you have to listen to music <br />that someone else chose?</p>\r\n         </div>\r\n         <div className=\"point-2-container\">\r\n            <h2 className=\"point-title-2\">Unlimited, streaming, <br /> ad-free!</h2>\r\n            <p className=\"point-description-2\">No arbitrary limits. <br />No distractions.</p>\r\n         </div>\r\n         <div className=\"point-3-container\">\r\n            <h2 className=\"point-title-3\">Mobile enabled...</h2>\r\n            <p className=\"point-description-3\">...Listen to your music on the go. <br />This streaming service is available on <br />all mobile platforms. </p>\r\n         </div>\r\n      </section>\r\n   </section>\r\n);\r\n\r\nexport default Landing;\r\n","export default [{\r\n  title: 'The Colors',\r\n  artist: 'Pablo Picasso',\r\n  releaseInfo: '1909 Spanish Records',\r\n  albumCover: '/assets/images/album_covers/01.jpg',\r\n  slug: 'the-colors',\r\n  songs: [\r\n      { title: 'Blue', duration: '161.71', audioSrc: '/assets/music/blue.mp3' },\r\n      { title: 'Green', duration: '103.96', audioSrc: '/assets/music/green.mp3' },\r\n      { title: 'Red', duration: '268.45', audioSrc: '/assets/music/red.mp3' },\r\n      { title: 'Pink', duration: '153.14', audioSrc: '/assets/music/pink.mp3' },\r\n      { title: 'Magenta', duration: '374.22', audioSrc: '/assets/music/magenta.mp3' }\r\n  ]\r\n}, {\r\n    title: 'The Telephone',\r\n    artist: 'Guglielmo Marconi',\r\n    releaseInfo: '1909 EM',\r\n    albumCover: '/assets/images/album_covers/02.jpg',\r\n    slug: 'the-telephone',\r\n    songs: [\r\n      { title: 'Blue', duration: '161.71', audioSrc: '/assets/music/blue.mp3' },\r\n      { title: 'Green', duration: '103.96', audioSrc: '/assets/music/green.mp3' },\r\n      { title: 'Red', duration: '268.45', audioSrc: '/assets/music/red.mp3' },\r\n      { title: 'Pink', duration: '153.14', audioSrc: '/assets/music/pink.mp3' },\r\n      { title: 'Magenta', duration: '374.22', audioSrc: '/assets/music/magenta.mp3' }\r\n    ]\r\n},{\r\n  title: 'Funny Songs',\r\n  artist: 'Speedy Gonzalez',\r\n  releaseInfo: '1979 Mexico',\r\n  albumCover: '/assets/images/album_covers/03.jpg',\r\n  slug: 'funny-songs',\r\n  songs: [\r\n    { title: 'Blue', duration: '161.71', audioSrc: '/assets/music/blue.mp3' },\r\n    { title: 'Green', duration: '103.96', audioSrc: '/assets/music/green.mp3' },\r\n    { title: 'Red', duration: '268.45', audioSrc: '/assets/music/red.mp3' },\r\n    { title: 'Pink', duration: '153.14', audioSrc: '/assets/music/pink.mp3' },\r\n    { title: 'Magenta', duration: '374.22', audioSrc: '/assets/music/magenta.mp3' },\r\n    { title: 'Bonus track', duration: '153.14', audioSrc: '/assets/music/pink.mp3' }\r\n  ]\r\n}, ];\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport albumData from './../data/albums';\r\nimport '../stylesheets/Library.css';\r\n\r\nclass Library extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = { \r\n         albums: albumData \r\n      };\r\n   }\r\n   render() {\r\n      return (\r\n         <section className='library-container'>\r\n            {\r\n               this.state.albums.map( (album, index) =>\r\n                  <Link className=\"album-container\" to={`/album/${album.slug}`} key={index}>\r\n                     <img className=\"album-cover\" src={album.albumCover} alt={album.title} />\r\n                     <div className=\"album-info-container\">\r\n                        <div>{album.title}</div>\r\n                        <div>{album.artist}</div>\r\n                        <div>{album.songs.length} songs</div>\r\n                     </div>\r\n                  </Link>\r\n               )\r\n            }\r\n         </section>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Library;\r\n","import React, { Component } from 'react';\r\nimport '../stylesheets/Player.css';\r\n\r\nclass PlayerBar extends Component {\r\n    render() {\r\n        return (\r\n            <section className=\"player-bar-container\">\r\n                <section id=\"buttons\">\r\n                    <button id=\"previous\" onClick={this.props.handlePrevClick}>\r\n                        <span className=\"ion-skip-backward\"></span>\r\n                    </button>\r\n                    <button id=\"play-pause\" onClick={this.props.handleSongClick}>\r\n                        <span className={this.props.isPlaying ? 'ion-pause' : 'ion-play'}></span>\r\n                    </button>\r\n                    <button id=\"next\">\r\n                        <span className=\"ion-skip-forward\" onClick={this.props.handleNextClick}></span>\r\n                    </button>\r\n                </section>\r\n                <section id=\"time-control\">\r\n                    <div className=\"current-time\">{this.props.formatTime(this.props.currentTime)}</div>\r\n                    <input \r\n                        type=\"range\"\r\n                        className=\"seek-bar\"\r\n                        value={this.props.currentTime / this.props.duration || 0}\r\n                        max=\"1\"\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        onChange={this.props.handleTimeChange}\r\n                    />\r\n                    <div className=\"total-time\">{this.props.formatTime(this.props.duration)}</div>\r\n                </section>\r\n                <section id=\"volume-control\">\r\n                    <div className=\"icon ion-volume-low\"></div>\r\n                    <input \r\n                        type=\"range\" \r\n                        className=\"seek-bar\" \r\n                        value={this.props.volume}\r\n                        max=\"1\"\r\n                        min=\"0\"\r\n                        step=\"0.01\"\r\n                        onChange={this.props.handleVolumeChange}\r\n                    />\r\n                    <div className=\"icon ion-volume-high\"></div>\r\n                </section>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayerBar;","import React, { Component } from 'react';\r\nimport albumData from './../data/albums';\r\nimport PlayerBar from './PlayerBar';\r\nimport '../stylesheets/Album.css';\r\n\r\nclass Album extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      const album = albumData.find( album => {\r\n         return album.slug === this.props.match.params.slug\r\n      });\r\n\r\n      // Initial state:\r\n      this.state = {\r\n         album: album,\r\n         currentSong: album.songs[0],\r\n         currentTime: 0,\r\n         duration: album.songs[0].duration,\r\n         isPlaying: false,\r\n         isHovering: null,\r\n         volume: 0.2,\r\n         init: true // this state is only used for the initial state of the song list (all index numbers are displayed)\r\n      };\r\n\r\n      // audioElement definition\r\n      this.audioElement = document.createElement('audio');\r\n      this.audioElement.src = album.songs[0].audioSrc;\r\n      this.audioElement.volume = this.state.volume;\r\n\r\n   }  // constructor ends\r\n\r\n\r\n      // play method\r\n      play() {\r\n\r\n         this.audioElement.play();\r\n         this.setState({\r\n            isPlaying: true,\r\n            init: false\r\n         });\r\n      }\r\n\r\n\r\n      // pause method\r\n      pause() {\r\n\r\n         this.audioElement.pause();\r\n         this.setState({\r\n            isPlaying: false\r\n         });\r\n      }\r\n\r\n\r\n      // componentDidMount lifecycle method\r\n      componentDidMount() {\r\n         this.eventListeners = {\r\n            timeupdate: e => {\r\n               this.setState({ currentTime: this.audioElement.currentTime });\r\n            },\r\n            durationchange: e => {\r\n               this.setState({ duration: this.audioElement.duration });\r\n            }\r\n           \r\n         };\r\n         this.audioElement.addEventListener('timeupdate', this.eventListeners.timeupdate);\r\n         this.audioElement.addEventListener('durationchange', this.eventListeners.durationchange);\r\n      }\r\n\r\n\r\n      // componentWilUnmount lifecycle method\r\n      componentWillUnmount() {\r\n         this.audioElement.src = null;\r\n         //this.audioElement = null;\r\n         this.audioElement.removeEventListener('timeupdate', this.eventListeners.timeupdate);\r\n         this.audioElement.removeEventListener('durationchange', this.eventListeners.durationchange);\r\n      }\r\n\r\n\r\n      // setSong method\r\n      setSong(song) {\r\n\r\n         this.audioElement.src = song.audioSrc;\r\n         this.setState({ currentSong: song });\r\n      }\r\n\r\n\r\n      // handleSongClick method \r\n      handleSongClick(song) {\r\n\r\n         const isSameSong = this.state.currentSong === song;\r\n\r\n         if (this.state.isPlaying && isSameSong) {\r\n            this.pause();\r\n\r\n         } else {\r\n            if (!isSameSong) {this.setSong(song);}\r\n            this.play();\r\n         }\r\n      }\r\n\r\n\r\n      // handlePrevClick method\r\n      handlePrevClick() {\r\n         const currentIndex = this.state.album.songs.findIndex(song => this.state.currentSong === song);\r\n         const newIndex = Math.max(0, currentIndex - 1);\r\n         const newSong = this.state.album.songs[newIndex];\r\n\r\n         this.setSong(newSong);\r\n         this.play();\r\n      }\r\n\r\n\r\n      // handleNextClick method\r\n      handleNextClick() {\r\n         const currentIndex = this.state.album.songs.findIndex(song => this.state.currentSong === song);\r\n         const newIndex = Math.min(currentIndex + 1, this.state.album.songs.length - 1);\r\n         const newSong = this.state.album.songs[newIndex];\r\n\r\n         this.setSong(newSong);\r\n         this.play();\r\n      }\r\n\r\n\r\n      // handleTimeChange method\r\n      handleTimeChange(e) {\r\n         const newTime = this.audioElement.duration * e.target.value;\r\n    \r\n         this.audioElement.currentTime = newTime;\r\n         this.setState({ currentTime: newTime });\r\n      }\r\n\r\n\r\n      // formatTime method\r\n      formatTime(timeInSec) {\r\n\r\n         if (!isNaN(timeInSec)) {\r\n\r\n            let minutes = Math.trunc(timeInSec / 60);\r\n            let seconds = Math.floor(((timeInSec / 60) - Math.trunc(timeInSec / 60)) * 60);\r\n            let zero = \"0\";\r\n\r\n            seconds > 9 ? zero=\"\" : zero=\"0\";\r\n            let formattedTime = minutes + ':' + zero + seconds;   // typeof string formatted to 'M:SS'\r\n\r\n            return (formattedTime);\r\n              \r\n         } else {\r\n\r\n            return (\"-:--\")\r\n         }\r\n      }\r\n\r\n\r\n      // handleVolumeChange method\r\n      handleVolumeChange(e) {\r\n         const newVolume = e.target.value;\r\n\r\n         this.setState({ volume: newVolume });\r\n         this.audioElement.volume = e.target.value;\r\n      }\r\n\r\n\r\n      // handleMouseEnter method\r\n      handleMouseEnter(index){\r\n         \r\n         this.setState ({\r\n            isHovering: this.state.album.songs[index]\r\n         });\r\n      }\r\n    \r\n    \r\n      // handleMouseLeave method\r\n      handleMouseLeave() {\r\n\r\n         this.setState({\r\n            isHovering: null\r\n         }); \r\n      }\r\n\r\n\r\n      // handleIconsDisplay method\r\n      handleIconsDisplay(song, index){\r\n\r\n         if (!this.state.isHovering && this.state.isPlaying && this.state.currentSong === song){ \r\n               \r\n            return(<span className=\"ion-pause\"></span>);   // The currently playing song displays a \"pause\" button in place of the song number.\r\n          \r\n         } else if (this.state.currentSong === song && this.state.isPlaying) {\r\n            \r\n            return(<span className=\"ion-pause\"></span>); // Holds pause icon\r\n            \r\n         } else if (this.state.isHovering === this.state.album.songs[index]) {\r\n            \r\n            return(<span className=\"ion-play\"></span>); // When I hover over a song, it displays a \"play\" button in place of the song number.\r\n\r\n         } else if (!this.state.isPlaying && this.state.currentSong === this.state.album.songs[index] && !this.state.init) {\r\n\r\n            return(<span className=\"ion-play\"></span>); // A paused song displays a \"play\" button in place of the song number.\r\n         \r\n         }  else {\r\n         \r\n            return(<span>{index + 1}</span>); // Returns the song index number + 1\r\n         }\r\n         \r\n      }\r\n\r\n   render() {\r\n      return (\r\n         <section className=\"album\">\r\n            <section className=\"album-info\">\r\n               <img id=\"album-cover-art\" src={this.state.album.albumCover} alt={this.state.album.title}/>\r\n               <div className=\"album-details\">\r\n                  <h1 id=\"album-title\">{this.state.album.title}</h1>\r\n                  <h2 id=\"artist\">{this.state.album.artist}</h2>\r\n                  <div id=\"release-info\">{this.state.album.releaseInfo}</div>\r\n               </div>\r\n            </section>\r\n            <table id=\"song-list\">\r\n               <colgroup>\r\n                  <col id=\"song-number-column\" />\r\n                  <col id=\"song-title-column\" />\r\n                  <col id=\"song-duration-column\" />\r\n               </colgroup>\r\n               <tbody>\r\n                  {this.state.album.songs.map( (song, index) =>\r\n                     <tr className=\"song\"\r\n                        key={index} \r\n                        onClick={() => this.handleSongClick(song)} \r\n                        onMouseEnter={() => this.handleMouseEnter(index)}\r\n                        onMouseLeave={() => this.handleMouseLeave()}\r\n                     >   \r\n                        <td>{this.handleIconsDisplay(song, index)}</td>\r\n                        <td key=\"title\">{song.title}</td>\r\n                        <td key=\"duration\">{this.formatTime(song.duration)}</td>\r\n                     </tr>\r\n                  )}\r\n               </tbody>\r\n            </table>\r\n            <PlayerBar\r\n               isPlaying={this.state.isPlaying}\r\n               volume={this.state.volume}\r\n               currentSong={this.state.currentSong}\r\n               currentTime={this.audioElement.currentTime}\r\n               duration={this.audioElement.duration}\r\n               handleSongClick={() => this.handleSongClick(this.state.currentSong)}\r\n               handlePrevClick={() => this.handlePrevClick()}\r\n               handleNextClick={() => this.handleNextClick()}\r\n               handleTimeChange={(e) => this.handleTimeChange(e)}\r\n               handleVolumeChange={(e) => this.handleVolumeChange(e)}\r\n               formatTime={this.formatTime}\r\n            />\r\n         </section>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Album;\r\n","import React, { Component } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport './stylesheets/App.css';\r\nimport Landing from './components/Landing';\r\nimport Library from './components/Library';\r\nimport Album from './components/Album';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header>\r\n          <div className=\"top-bar-container\">\r\n            <nav>\r\n               <Link className=\"landing-link\" to='/'>Home</Link>\r\n               <p id=\"separator\">|</p>\r\n               <Link className=\"library-link\" to='/library'>Library</Link>\r\n            </nav>\r\n          </div>\r\n          <div className=\"main-title-container\">\r\n            <div className=\"bloc-jams-title\">Bloc Jams</div> \r\n          </div>\r\n        </header>\r\n\r\n        <main>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route path=\"/library\" component={Library} />\r\n            <Route path=\"/album/:slug\" component={Album} />\r\n        </main>\r\n        <footer className=\"footer\">\r\n          <img className=\"hero-image\" height=\"75px\" width=\"100px\" src=\"/assets/images/landing_images/logo.png\" alt=\"Boy singing\" />\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n//import registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(\r\n   <BrowserRouter>\r\n      <App />\r\n   </BrowserRouter>\r\n   , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n\r\nserviceWorker.unregister();\r\n//registerServiceWorker();\r\n"],"sourceRoot":""}